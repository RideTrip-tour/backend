"""add tour model

Revision ID: 4915dbe8dfc4
Revises: 5ba704653723
Create Date: 2024-08-25 16:11:19.756036

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4915dbe8dfc4'
down_revision: Union[str, None] = '5ba704653723'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accommodation_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transport_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('accommodations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('accommodation_type_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('checkin_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('checkout_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['accommodation_type_id'], ['accommodation_types.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trip_segments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transport_type_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('start_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('finish_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('start_location_id', sa.Integer(), nullable=False),
    sa.Column('target_location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['start_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['target_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['transport_type_id'], ['transport_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trips',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('start_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('finish_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('start_location_id', sa.Integer(), nullable=False),
    sa.Column('target_location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['start_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['target_location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tours',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('target_location_id', sa.Integer(), nullable=False),
    sa.Column('start_location_id', sa.Integer(), nullable=False),
    sa.Column('departure_trip_id', sa.Integer(), nullable=False),
    sa.Column('return_trip_id', sa.Integer(), nullable=False),
    sa.Column('accommodation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['accommodation_id'], ['accommodations.id'], ),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['departure_trip_id'], ['trips.id'], ),
    sa.ForeignKeyConstraint(['return_trip_id'], ['trips.id'], ),
    sa.ForeignKeyConstraint(['start_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['target_location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trips_segments',
    sa.Column('trip_segment_id', sa.Integer(), nullable=False),
    sa.Column('trip_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.ForeignKeyConstraint(['trip_segment_id'], ['trip_segments.id'], ),
    sa.PrimaryKeyConstraint('trip_segment_id', 'trip_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trips_segments')
    op.drop_table('tours')
    op.drop_table('trips')
    op.drop_table('trip_segments')
    op.drop_table('accommodations')
    op.drop_table('transport_types')
    op.drop_table('accommodation_types')
    # ### end Alembic commands ###
